<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="121" errors="0" failures="2" not-run="0" inconclusive="0" ignored="5" skipped="0" invalid="0" date="2017-02-24" time="15:41:12">
  <environment user="hg1" machine-name="THESERVERNAME" cwd="C:\Users\hg1" user-domain="ZA" platform="Microsoft Windows 7 Professional |C:\windows|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="6.1.7601" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-ZA" current-uiculture="en-US" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Failure" success="False" time="20.172" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Invoke-MonitoringCore" executed="True" result="Success" success="True" time="6.9708" asserts="0" description="Invoke-MonitoringCore">
        <results>
          <test-case description="Should invoke core monitoring (non-farm)" name="Invoke-MonitoringCore.Should invoke core monitoring (non-farm)" time="6.8697" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should send a notification for an exception OUTSIDE the tests" name="Invoke-MonitoringCore.Should send a notification for an exception OUTSIDE the tests" time="0.1011" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Invoke-MonitoringCore (New Scope)" executed="True" result="Success" success="True" time="0.1848" asserts="0" description="Invoke-MonitoringCore (New Scope)">
        <results>
          <test-case description="Should NOT send a notification for an exception INSIDE the tests" name="Invoke-MonitoringCore (New Scope).Should NOT send a notification for an exception INSIDE the tests" time="0.1848" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Invoke-OSMonitoring" executed="True" result="Success" success="True" time="0.7343" asserts="0" description="Invoke-OSMonitoring">
        <results>
          <test-case description="Should invoke OS monitoring" name="Invoke-OSMonitoring.Should invoke OS monitoring" time="0.2855" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should work with a minimal configuration" name="Invoke-OSMonitoring.Should work with a minimal configuration" time="0.2675" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should work with a full configuration (Servers list)" name="Invoke-OSMonitoring.Should work with a full configuration (Servers list)" time="0.0933" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should work with a full configuration (primary server)" name="Invoke-OSMonitoring.Should work with a full configuration (primary server)" time="0.0881" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Invoke-OSMonitoring2" executed="True" result="Ignored" success="True" time="0.0687" asserts="0" description="Invoke-OSMonitoring2">
        <results>
          <test-case description="Should work with a minimal configuration" name="Invoke-OSMonitoring2.Should work with a minimal configuration" time="0.0687" asserts="0" success="True" result="Ignored" executed="False" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Invoke-SPMonitoring" executed="True" result="Success" success="True" time="0.3688" asserts="0" description="Invoke-SPMonitoring">
        <results>
          <test-case description="Should invoke SP monitoring" name="Invoke-SPMonitoring.Should invoke SP monitoring" time="0.3688" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Initialize-Notifications" executed="True" result="Ignored" success="True" time="0.306" asserts="0" description="Initialize-Notifications">
        <results>
          <test-case description="Should return a the correct html for given test output" name="Initialize-Notifications.Should return a the correct html for given test output" time="0.306" asserts="0" success="True" result="Ignored" executed="False" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Send-MonitoringNotifications" executed="True" result="Success" success="True" time="0.7726" asserts="0" description="Send-MonitoringNotifications">
        <results>
          <test-case description="Should send notifications to the specified channels (email, Pushbullet, O365 Teams)" name="Send-MonitoringNotifications.Should send notifications to the specified channels (email, Pushbullet, O365 Teams)" time="0.3949" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should send notifications to ONLY the specified channels (email, Pushbullet, O365 Teams)" name="Send-MonitoringNotifications.Should send notifications to ONLY the specified channels (email, Pushbullet, O365 Teams)" time="0.0975" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should mark failures as Critical" name="Send-MonitoringNotifications.Should mark failures as Critical" time="0.097" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should mark non-failures as NOT Critical" name="Send-MonitoringNotifications.Should mark non-failures as NOT Critical" time="0.0893" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should mark failures as NOT Critical when 'All' set" name="Send-MonitoringNotifications.Should mark failures as NOT Critical when 'All' set" time="0.0939" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Send-RepairNotifications" executed="True" result="Success" success="True" time="0.3431" asserts="0" description="Send-RepairNotifications">
        <results>
          <test-case description="Should send notifications to the specified channels (email, Pushbullet, O365 Teams)" name="Send-RepairNotifications.Should send notifications to the specified channels (email, Pushbullet, O365 Teams)" time="0.2702" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should send notifications to ONLY the specified channels (email, Pushbullet, O365 Teams)" name="Send-RepairNotifications.Should send notifications to ONLY the specified channels (email, Pushbullet, O365 Teams)" time="0.0729" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-EmailBody" executed="True" result="Failure" success="False" time="0.7908" asserts="0" description="New-EmailBody">
        <results>
          <test-case description="Should return a the correct html for given test output" name="New-EmailBody.Should return a the correct html for given test output" time="0.1872" asserts="0" success="True" result="Ignored" executed="False" />
          <test-case description="Should return a the correct html for given test output [if the output structure changes]" name="New-EmailBody.Should return a the correct html for given test output [if the output structure changes]" time="0.3224" asserts="0" success="False" result="Failure" executed="True">
            <failure>
              <message>Expected string length 4478 but was 4636. Strings differ at index 998.
Expected: {&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body style="font-family: verdana; font-size: 12px;"&gt;&lt;table width="100%" style="border-collapse: collapse; "&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; Padding: 20px;"&gt;&lt;h1&gt;PoShMon Monitoring Report&lt;/h1&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 10px; padding-left: 20px"&gt;SharePoint Environment&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: lightgray; padding-top: 20px;"&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="2"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Grouped Test (60.00 Seconds)&lt;/h2&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #1D6097; color: #FFFFFF" colspan="2"&gt;Server 1&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="padding-left: 25px"&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;table style="border-collapse: collapse;" cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Message&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Event ID&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;Message 1&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;123&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: #e1e3e8"&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;Message 2&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;456&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #1D6097; color: #FFFFFF" colspan="2"&gt;Server 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="padding-left: 25px"&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;table style="border-collapse: collapse;" cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Message&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Event ID&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;Message 3&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;789&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="2"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Ungrouped Test (60.00 Seconds)&lt;/h2&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;State&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Component&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 1&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;123&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: #e1e3e8"&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 2&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;456&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 20px"&gt;&lt;b&gt;Skipped Tests:&lt;/b&gt; SPServerStatus, WindowsServiceState, SPFailingTimerJobs, SPDatabaseHealth, SPSearchHealth, SPDistributedCacheHealth, WebTests&lt;br/&gt;&lt;b&gt;Total Elapsed Time (Seconds):&lt;/b&gt; 180.00 (3.00 Minutes)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; padding: 20px" align="center"&gt;PoShMon Version 1.2.3 (Version check skipped)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br/&gt;&lt;/body&gt;}
But was:  {&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body style="font-family: verdana; font-size: 12px;"&gt;&lt;table width="100%" style="border-collapse: collapse; "&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; Padding: 20px;"&gt;&lt;h1&gt;PoShMon Monitoring Report&lt;/h1&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 10px; padding-left: 20px"&gt;SharePoint Environment&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: lightgray; padding-top: 20px;"&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="1"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Grouped Test (60.00 Seconds)&lt;/h2&gt;&lt;th align="right" style="border: 1px solid CCCCCC; background-color: #1D6097;"&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #1D6097; color: #FFFFFF" colspan="2"&gt;Server 1&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="padding-left: 25px"&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;table style="border-collapse: collapse;" cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Message&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Event ID&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;Message 1&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;123&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: #e1e3e8"&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;Message 2&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;456&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #1D6097; color: #FFFFFF" colspan="2"&gt;Server 2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="padding-left: 25px"&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;table style="border-collapse: collapse;" cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Message&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Event ID&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;Message 3&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;789&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="1"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Ungrouped Test (60.00 Seconds)&lt;/h2&gt;&lt;th align="right" style="border: 1px solid CCCCCC; background-color: #1D6097;"&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;State&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Component&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 1&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;123&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: #e1e3e8"&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 2&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;456&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 20px"&gt;&lt;b&gt;Skipped Tests:&lt;/b&gt; SPServerStatus, WindowsServiceState, SPFailingTimerJobs, SPDatabaseHealth, SPSearchHealth, SPDistributedCacheHealth, WebTests&lt;br/&gt;&lt;b&gt;Total Elapsed Time (Seconds):&lt;/b&gt; 180.00 (3.00 Minutes)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; padding: 20px" align="center"&gt;PoShMon Version 1.2.3 (Version check skipped)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br/&gt;&lt;/body&gt;}
message>
              <stack-trace>at line: 150 in C:\Dev\GitHub\PoShMon\src\Tests\CI\Integration\PoShMon.Notifications.Email\New-EmailBody.Tests.ps1
150:             $actual | Should Be $expected</stack-trace>
            </failure>
          </test-case>
          <test-case description="Should return a the correct html if an exception occurs in a test" name="New-EmailBody.Should return a the correct html if an exception occurs in a test" time="0.2812" asserts="0" success="False" result="Failure" executed="True">
            <failure>
              <message>Expected string length 2973 but was 3132. Strings differ at index 998.
Expected: {&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body style="font-family: verdana; font-size: 12px;"&gt;&lt;table width="100%" style="border-collapse: collapse; "&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; Padding: 20px;"&gt;&lt;h1&gt;PoShMon Monitoring Report&lt;/h1&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 10px; padding-left: 20px"&gt;SharePoint Environment&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: lightgray; padding-top: 20px;"&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="2"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Test1 (60.00 Seconds)&lt;/h2&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;State&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Component&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 1&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;123&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: #e1e3e8"&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 2&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;456&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="0"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Test2 - Failed&lt;/h2&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="background-color: #FCCFC5"&gt;An Exception Occurred: System.Exception: Something went wrong&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 20px"&gt;&lt;b&gt;Skipped Tests:&lt;/b&gt; SPServerStatus, WindowsServiceState, SPFailingTimerJobs, SPDatabaseHealth, SPSearchHealth, SPDistributedCacheHealth, WebTests&lt;br/&gt;&lt;b&gt;Total Elapsed Time (Seconds):&lt;/b&gt; 180.00 (3.00 Minutes)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; padding: 20px" align="center"&gt;PoShMon Version 1.2.3 (Version check skipped)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br/&gt;&lt;/body&gt;}
But was:  {&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body style="font-family: verdana; font-size: 12px;"&gt;&lt;table width="100%" style="border-collapse: collapse; "&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; Padding: 20px;"&gt;&lt;h1&gt;PoShMon Monitoring Report&lt;/h1&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 10px; padding-left: 20px"&gt;SharePoint Environment&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: lightgray; padding-top: 20px;"&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="1"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Test1 (60.00 Seconds)&lt;/h2&gt;&lt;th align="right" style="border: 1px solid CCCCCC; background-color: #1D6097;"&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;State&lt;/th&gt;&lt;th align="left" style="border: 1px solid #CCCCCC; background-color: #C7DAE9; color: #126AB0"&gt;Component&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=""&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 1&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;123&lt;/td&gt;&lt;/tr&gt;&lt;tr style="background-color: #e1e3e8"&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="left"&gt;State 2&lt;/td&gt;&lt;td valign="top" style="border: 1px solid #CCCCCC;" align="right"&gt;456&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;div style="width:100%; background-color: #FFFFFF;"&gt;&lt;table style="border-collapse: collapse; min-width: 500px; " cellpadding="3"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align="left" style="border: 1px solid CCCCCC; background-color: #1D6097;" colspan="-1"&gt;&lt;h2 style="font-size: 16px; color: #FFFFFF"&gt;Test2 - Failed&lt;/h2&gt;&lt;th align="right" style="border: 1px solid CCCCCC; background-color: #1D6097;"&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="background-color: #FCCFC5"&gt;An Exception Occurred: System.Exception: Something went wrong&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br/&gt;&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #000000; color: #FFFFFF; padding: 20px"&gt;&lt;b&gt;Skipped Tests:&lt;/b&gt; SPServerStatus, WindowsServiceState, SPFailingTimerJobs, SPDatabaseHealth, SPSearchHealth, SPDistributedCacheHealth, WebTests&lt;br/&gt;&lt;b&gt;Total Elapsed Time (Seconds):&lt;/b&gt; 180.00 (3.00 Minutes)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;td style="background-color: #1D6097; color: #FFFFFF; padding: 20px" align="center"&gt;PoShMon Version 1.2.3 (Version check skipped)&lt;/td&gt;&lt;td style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3" style="background-color: lightgray"&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br/&gt;&lt;/body&gt;}
message>
              <stack-trace>at line: 196 in C:\Dev\GitHub\PoShMon\src\Tests\CI\Integration\PoShMon.Notifications.Email\New-EmailBody.Tests.ps1
196:             $actual | Should Be $expected</stack-trace>
            </failure>
          </test-case>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Repair-Environment" executed="True" result="Success" success="True" time="0.6889" asserts="0" description="Repair-Environment">
        <results>
          <test-case description="Should send notifications of repairs" name="Repair-Environment.Should send notifications of repairs" time="0.3112" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should send notifications of exceptions in repairs" name="Repair-Environment.Should send notifications of exceptions in repairs" time="0.1111" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should send notifications of each repair performed" name="Repair-Environment.Should send notifications of each repair performed" time="0.1455" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should send notifications of exceptions in repairs as well as successful repairs" name="Repair-Environment.Should send notifications of exceptions in repairs as well as successful repairs" time="0.1211" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-PoShMonConfiguration" executed="True" result="Success" success="True" time="0.2907" asserts="0" description="New-PoShMonConfiguration">
        <results>
          <test-case description="Should work with a minimal configuration" name="New-PoShMonConfiguration.Should work with a minimal configuration" time="0.2462" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should work with a full configuration (Servers list)" name="New-PoShMonConfiguration.Should work with a full configuration (Servers list)" time="0.024" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should work with a full configuration (primary server)" name="New-PoShMonConfiguration.Should work with a full configuration (primary server)" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="O365TeamsConfiguration" executed="True" result="Success" success="True" time="0.1841" asserts="0" description="O365TeamsConfiguration">
        <results>
          <test-case description="Should return a matching configuration to what was supplied" name="O365TeamsConfiguration.Should return a matching configuration to what was supplied" time="0.1841" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-ComputerTime" executed="True" result="Success" success="True" time="0.8077" asserts="0" description="Test-ComputerTime">
        <results>
          <test-case description="Should return a matching output structure" name="Test-ComputerTime.Should return a matching output structure" time="0.2386" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-ComputerTime.Should write the expected Verbose output" time="0.0852" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-ComputerTime.Should write the expected Warning output" time="0.0842" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on different server time (to local PoShMon machine)" name="Test-ComputerTime.Should warn on different server time (to local PoShMon machine)" time="0.0717" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on matching server times" name="Test-ComputerTime.Should not warn on matching server times" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on server time differences within default threshold" name="Test-ComputerTime.Should not warn on server time differences within default threshold" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on server times with differences above default threshold" name="Test-ComputerTime.Should warn on server times with differences above default threshold" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on server time differences within configured threshold" name="Test-ComputerTime.Should not warn on server time differences within configured threshold" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on server times with differences above configured threshold" name="Test-ComputerTime.Should warn on server times with differences above configured threshold" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on server times with differences within default threshold across hour boundaries" name="Test-ComputerTime.Should not warn on server times with differences within default threshold across hour boundaries" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on server times with differences within default threshold across day boundaries" name="Test-ComputerTime.Should not warn on server times with differences within default threshold across day boundaries" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-CPULoad" executed="True" result="Success" success="True" time="0.5451" asserts="0" description="Test-CPULoad">
        <results>
          <test-case description="Should return a matching output structure" name="Test-CPULoad.Should return a matching output structure" time="0.2344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-CPULoad.Should write the expected Verbose output" time="0.0632" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-CPULoad.Should write the expected Warning output" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on CPU below threshold" name="Test-CPULoad.Should not warn on CPU below threshold" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on CPU above threshold" name="Test-CPULoad.Should warn on CPU above threshold" time="0.1036" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should use the configuration threshold properly" name="Test-CPULoad.Should use the configuration threshold properly" time="0.057" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-DriveSpace" executed="True" result="Success" success="True" time="0.6696" asserts="0" description="Test-DriveSpace">
        <results>
          <test-case description="Should return a matching output structure" name="Test-DriveSpace.Should return a matching output structure" time="0.2376" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output (fixed)" name="Test-DriveSpace.Should write the expected Verbose output (fixed)" time="0.0624" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output (fixed)" name="Test-DriveSpace.Should write the expected Warning output (fixed)" time="0.052" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output (percent)" name="Test-DriveSpace.Should write the expected Warning output (percent)" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on space above threshold" name="Test-DriveSpace.Should not warn on space above threshold" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on space below threshold (default)" name="Test-DriveSpace.Should warn on space below threshold (default)" time="0.0557" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on space below specified threshold (fixed)" name="Test-DriveSpace.Should warn on space below specified threshold (fixed)" time="0.0614" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on space above specified threshold (percent)" name="Test-DriveSpace.Should warn on space above specified threshold (percent)" time="0.053" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on space below specified threshold (percent)" name="Test-DriveSpace.Should not warn on space below specified threshold (percent)" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-EventLogs" executed="True" result="Ignored" success="True" time="0.5165" asserts="0" description="Test-EventLogs">
        <results>
          <test-case description="Should return a matching output structure" name="Test-EventLogs.Should return a matching output structure" time="0.2542" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-EventLogs.Should write the expected Verbose output" time="0.0573" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-EventLogs.Should write the expected Warning output" time="0.0673" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should alert on items found" name="Test-EventLogs.Should alert on items found" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should group per server" name="Test-EventLogs.Should group per server" time="0.0146" asserts="0" success="True" result="Ignored" executed="False" />
          <test-case description="Should group on EventID and Message" name="Test-EventLogs.Should group on EventID and Message" time="0.0776" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-Memory" executed="True" result="Success" success="True" time="0.4667" asserts="0" description="Test-Memory">
        <results>
          <test-case description="Should return a matching output structure" name="Test-Memory.Should return a matching output structure" time="0.2525" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-Memory.Should write the expected Verbose output" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-Memory.Should write the expected Warning output" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on space above threshold" name="Test-Memory.Should not warn on space above threshold" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on space below threshold" name="Test-Memory.Should warn on space below threshold" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should use the configuration threshold properly" name="Test-Memory.Should use the configuration threshold properly" time="0.038" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-ServiceState" executed="True" result="Success" success="True" time="0.353" asserts="0" description="Test-ServiceState">
        <results>
          <test-case description="Should return a matching output structure" name="Test-ServiceState.Should return a matching output structure" time="0.2177" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-ServiceState.Should write the expected Verbose output" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should pass for all running services" name="Test-ServiceState.Should pass for all running services" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should fail for any service in the wrong state" name="Test-ServiceState.Should fail for any service in the wrong state" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Resolve-HighCPUWhileSearchRunning" executed="True" result="Success" success="True" time="0.2772" asserts="0" description="Resolve-HighCPUWhileSearchRunning">
        <results>
          <test-case description="Should not change output for non-Search activity" name="Resolve-HighCPUWhileSearchRunning.Should not change output for non-Search activity" time="0.1936" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not change output for Search Query activity" name="Resolve-HighCPUWhileSearchRunning.Should not change output for Search Query activity" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should change output for non-Query Search activity" name="Resolve-HighCPUWhileSearchRunning.Should change output for non-Query Search activity" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPDatabaseHealth" executed="True" result="Success" success="True" time="0.5076" asserts="0" description="Test-SPDatabaseHealth">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPDatabaseHealth.Should return a matching output structure" time="0.3072" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPDatabaseHealth.Should write the expected Verbose output" time="0.0632" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-SPDatabaseHealth.Should write the expected Warning output" time="0.0563" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on databases that are all fine" name="Test-SPDatabaseHealth.Should not warn on databases that are all fine" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on databases that are need upgrade" name="Test-SPDatabaseHealth.Should warn on databases that are need upgrade" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPDistributedCacheHealth" executed="True" result="Success" success="True" time="0.4425" asserts="0" description="Test-SPDistributedCacheHealth">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPDistributedCacheHealth.Should return a matching output structure" time="0.2432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPDistributedCacheHealth.Should write the expected Verbose output" time="0.0519" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-SPDistributedCacheHealth.Should write the expected Warning output" time="0.0596" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on all server are online" name="Test-SPDistributedCacheHealth.Should not warn on all server are online" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on servers being offline" name="Test-SPDistributedCacheHealth.Should warn on servers being offline" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPJobHealth" executed="True" result="Success" success="True" time="0.4755" asserts="0" description="Test-SPJobHealth">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPJobHealth.Should return a matching output structure" time="0.2263" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPJobHealth.Should write the expected Verbose output" time="0.0723" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on no failed Jobs" name="Test-SPJobHealth.Should not warn on no failed Jobs" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-SPJobHealth.Should write the expected Warning output" time="0.056" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on any failed Jobs" name="Test-SPJobHealth.Should warn on any failed Jobs" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return all failed Jobs" name="Test-SPJobHealth.Should return all failed Jobs" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPSearchHealth" executed="True" result="Success" success="True" time="0.5109" asserts="0" description="Test-SPSearchHealth">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPSearchHealth.Should return a matching output structure" time="0.2154" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPSearchHealth.Should write the expected Verbose output" time="0.0792" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-SPSearchHealth.Should write the expected Warning output" time="0.0726" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return an output for each component" name="Test-SPSearchHealth.Should return an output for each component" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on all Active components" name="Test-SPSearchHealth.Should not warn on all Active components" time="0.045" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on at least one InActive components" name="Test-SPSearchHealth.Should warn on at least one InActive components" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPServerStatus" executed="True" result="Success" success="True" time="0.5693" asserts="0" description="Test-SPServerStatus">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPServerStatus.Should return a matching output structure" time="0.229" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPServerStatus.Should write the expected Verbose output" time="0.0648" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-SPServerStatus.Should write the expected Warning output" time="0.0878" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return an output for each Server" name="Test-SPServerStatus.Should return an output for each Server" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on any component needing upgrade" name="Test-SPServerStatus.Should warn on any component needing upgrade" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on any component not being Online" name="Test-SPServerStatus.Should warn on any component not being Online" time="0.048" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on any component not being Online and needing upgrade" name="Test-SPServerStatus.Should warn on any component not being Online and needing upgrade" time="0.0545" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPUPSSyncHealth" executed="True" result="Success" success="True" time="0.6561" asserts="0" description="Test-SPUPSSyncHealth">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPUPSSyncHealth.Should return a matching output structure" time="0.2349" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPUPSSyncHealth.Should write the expected Verbose output" time="0.0952" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Warning output" name="Test-SPUPSSyncHealth.Should write the expected Warning output" time="0.0949" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should not warn on no failed Jobs" name="Test-SPUPSSyncHealth.Should not warn on no failed Jobs" time="0.087" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should warn on any failed Jobs" name="Test-SPUPSSyncHealth.Should warn on any failed Jobs" time="0.0674" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return all failed Jobs" name="Test-SPUPSSyncHealth.Should return all failed Jobs" time="0.0768" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-SPWindowsServiceState" executed="True" result="Success" success="True" time="0.4609" asserts="0" description="Test-SPWindowsServiceState">
        <results>
          <test-case description="Should return a matching output structure" name="Test-SPWindowsServiceState.Should return a matching output structure" time="0.2301" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-SPWindowsServiceState.Should write the expected Verbose output" time="0.0761" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should fail for any service in the wrong state" name="Test-SPWindowsServiceState.Should fail for any service in the wrong state" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should test for services discovered" name="Test-SPWindowsServiceState.Should test for services discovered" time="0.0548" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should skip any service specified discovered" name="Test-SPWindowsServiceState.Should skip any service specified discovered" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-Website" executed="True" result="Success" success="True" time="0.5587" asserts="0" description="Test-Website">
        <results>
          <test-case description="Should return a matching output structure" name="Test-Website.Should return a matching output structure" time="0.2445" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should write the expected Verbose output" name="Test-Website.Should write the expected Verbose output" time="0.1071" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should test directly and on each server" name="Test-Website.Should test directly and on each server" time="0.0658" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should fail on server 1" name="Test-Website.Should fail on server 1" time="0.0671" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should find matching text" name="Test-Website.Should find matching text" time="0.0741" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-EmailFooter" executed="True" result="Ignored" success="True" time="0.2667" asserts="0" description="New-EmailFooter">
        <results>
          <test-case description="Should Show the Skipped Tests" name="New-EmailFooter.Should Show the Skipped Tests" time="0.1941" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Show 'None' for non-skipped tests" name="New-EmailFooter.Should Show 'None' for non-skipped tests" time="0.0309" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Show 'None' for non-skipped tests as empty array" name="New-EmailFooter.Should Show 'None' for non-skipped tests as empty array" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Show 'None' for non-skipped tests as empty item" name="New-EmailFooter.Should Show 'None' for non-skipped tests as empty item" time="0.0065" asserts="0" success="True" result="Ignored" executed="False" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-O365TeamsMessageBody" executed="True" result="Success" success="True" time="0.1913" asserts="0" description="New-O365TeamsMessageBody">
        <results>
          <test-case description="Should return a the correct output for given test output" name="New-O365TeamsMessageBody.Should return a the correct output for given test output" time="0.172" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return a the correct output if an exception occurs in a test" name="New-O365TeamsMessageBody.Should return a the correct output if an exception occurs in a test" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-PushbulletMessageBody" executed="True" result="Success" success="True" time="0.193" asserts="0" description="New-PushbulletMessageBody">
        <results>
          <test-case description="Should return a the correct output for given test output" name="New-PushbulletMessageBody.Should return a the correct output for given test output" time="0.1766" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return a the correct output if an exception occurs in a test" name="New-PushbulletMessageBody.Should return a the correct output if an exception occurs in a test" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>